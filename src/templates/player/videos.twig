{% set user = request.session.get("user") %}
{% set user_permissions = request.session.get("user_permissions") %}
{% set videos_visible_permission = user_permissions.permissions.Videos.visible == "1" or user.user_group_id == "1" %}
{% set videos_edit_permission = user_permissions.permissions.Videos.edit == "1" or user.user_group_id == "1" %}
{% set videos_delete_permission = user_permissions.permissions.Videos.delete == "1" or user.user_group_id == "1" %}
{% set ns = namespace(load_video_id = 0) %}

{% if videos_visible_permission %}
    <div class="row">
        <div class="col-12" id="videoFeedback"></div>
        <div class="col-12 col-xl-4">
            <h3 class="pb-2 text-uppercase">Videos</h3>
            <div id="currentVideo" class="mb-3"></div>
            <hr />
            <div id="videoList" class="video-list-container mb-4">
                {% if videos %}
                    {% if videos|length > 0 %}
                        {% set ns.load_video_id = videos[0].id %}
                    {% endif %}
                    {%  with videos=videos  %}
                        {% include "player/video-list.twig" %}
                    {% endwith %}
                {% endif %}
            </div>
        </div>
        <div class="col-12 col-xl-8" id="videoTranscript">
        </div>
    </div>
    <script>
        function submitUserVerification(transcriptId, mediaId) {
            submitForm("speaker_form", `/api/athlete/{{ player.id }}/transcript/${transcriptId}/verified`, "", function () {
                loadTranscript(mediaId);
            });
        }

        function moveVideoToCurrent(videoId) {
            // move the video from the list to the current video section
            const videoElement = $(`#video_${videoId}`);
            // remove view button
            videoElement.find("button").remove();
            $('#currentVideo').html(videoElement.html());
            videoElement.remove();
        }

        function loadTranscript(videoId) {
            $('#videoTranscript').html(`<div class="text-center"><h5 class="pb-2">Loading ...</h5><div style="width: 10rem; height: 10rem;" class="spinner-border" role="status">
                <span class="sr-only text-black">Loading...</span>
            </div></div>`)

            moveVideoToCurrent(videoId);

            loadPage(`/api/athlete/{{ player.id }}/videos/${videoId}/transcript`, 'videoTranscript');
            loadPage(`/api/athlete/{{ player.id }}/video-list?selectedvideoid=${videoId}`, 'videoList');
        }

        {% if videos_edit_permission %}
        function addToQueue(videoId) {
            {% set queueToken = formToken({"url":"/api/athlete/"~player.id~"/videos/${videoId}/transcript/queue?t="~RANDOM()}) %}
            const formToken =  "{{ queueToken }}";
            const formData = new FormData();
            formData.append("player_media_id", videoId);
            formData.append("formToken", formToken);
            postUrl(`/api/athlete/{{ player.id }}/videos/${videoId}/transcript/queue`, formData, "videoFeedback", function (data) {
                loadPage('/api/athlete/{{ player.id }}/videos', 'tabVideos');
            })
        }

        function toggleIncludeVideo(videoId) {
            {% set includeVideoToken = formToken({"url":"/api/athlete/"~player.id~"/videos/${videoId}/include?t="~RANDOM()}) %}
            const formToken =  "{{ includeVideoToken }}";
            const formData = new FormData();
            formData.append("player_media_id", videoId);
            formData.append("formToken", formToken);
            postUrl(`/api/athlete/{{ player.id }}/videos/${videoId}/include`, formData, "videoFeedback", function (data) {
                loadPage('/api/athlete/{{ player.id }}/videos', 'tabVideos');
            })
        }
        {% endif %}

        {% if videos_delete_permission %}
        function removeVideo(videoId) {
            {% set removeVideoToken = formToken({"url":"/api/athlete/"~player.id~"/videos/${videoId}/remove?t="~RANDOM()}) %}
            const formToken =  "{{ removeVideoToken }}";
            const formData = new FormData();
            formData.append("player_media_id", videoId);
            formData.append("formToken", formToken);
            postUrl(`/api/athlete/{{ player.id }}/videos/${videoId}/remove`, formData, "videoFeedback", function (data) {
                loadPage('/api/athlete/{{ player.id }}/videos', 'tabVideos')
            });
        }
        {% endif %}

        loadTranscript({{ ns.load_video_id }})
    </script>
    <!-- <button class="btn btn-soft-green" onclick="loadPage('/api/athlete/{{ player.id }}/videos', 'tabVideos')"> Refresh </button> -->
{% endif %}
