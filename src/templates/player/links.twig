{% set user = request.session.get("user") %}
{% set user_permissions = request.session.get("user_permissions") %}
{% set links_visible_permission = user_permissions.permissions.Links.visible == "1" or user.user_group_id == "1" %}
{% set links_create_permission = user_permissions.permissions.Links.create == "1" or user.user_group_id == "1" %}
{% set links_delete_permission = user_permissions.permissions.Links.delete == "1" or user.user_group_id == "1" %}
{% set videos_edit_permission = user_permissions.permissions.Videos.edit == "1" or user.user_group_id == "1" %}
<h3 class="text-uppercase mt-4">Links</h3>
{% if links_visible_permission %}
    {% if links_create_permission %}
        <form id="linkDetails" onsubmit="return false">
            <input type="hidden" name="player_id" value="{{ player_id }}">
            <div class="row">
                <div class="col-12 col-lg-8 form-group">
                    <label class="font-weight-bold" for="linkUrl">Link Url</label>
                    <input class="form-control" id="linkUrl" name="url" placeholder="https://...">
                    <div id="link-tooltip" class="alert alert-info">
                        For YouTube links, use the full URL (https://youtube.com/watch?v=VIDEO_ID).
                    </div>
                </div>
                <div class="col-12 col-lg form-group">
                    <label class="font-weight-bold" for="mediaType">Link Type</label>
                    <select class="form-control" id="mediaType" name="mediaType">
                        <option value="video-youtube">YouTube Video</option>
                        <option value="video-youtube-channel">YouTube Channel</option>
                        <option value="link-bio">Bio Link</option>
                        <option value="video-generic">Video Link</option>
                        <option value="link-generic">Generic Link</option>
                    </select>
                </div>
                <div class="col-12 col-lg-2">
                    <label class="d-none d-lg-block">&nbsp;</label>
                    <button class="btn btn-soft-green w-100 btn-text-lg" onclick="addLink()">
                        Add +
                    </button>
                </div>
            </div>
            {{ ("linkDetailsForm"~RANDOM()) | formToken }}
        </form>
    {% endif %}
    <div id="linkMessage"></div>
    <hr class="hor-line-gradient"/>
    <div class="content mt-4" style="height: fit-content">
        <table id="links-grid" class="table text-black m-0 responsive nowrap">
            <thead>
            <!-- table details filled in completely by data tables -->
            </thead>
        </table>
        <script>
            var linksGrid = null
            $(document).ready(function () {
                linksGrid = $("#links-grid").DataTable({
                    dom: '',
                    ajax: "/api/athlete/{{ player_id }}/links_data",
                    columnDefs: [{
                        "defaultContent": "-",  // Fallback value
                        "targets": "_all"       // Applies to all columns
                    }],
                    columns: [
                        {
                            "title": "Id",
                            data: 'id',
                            visible: false,
                            searchable: false
                        },
                        {
                            "title": "Link Url",
                            data: "url",
                            "render": function (data, type, row) {
                                return `<a href="${row.url}" target="_blank" class='text-black text-break truncate-table-link'><u>${row.url}</u></a>`
                            }
                        },
                        {
                            "title": "Link Type",
                            data: 'media_type',
                        },
                        {
                            "title": "Media Status",
                            "render": function (data, type, row) {
                                let html = '<div class="d-flex" style="grid-gap: 0.5rem;">';
                                html += `<div class="d-flex text-white" style="font-size: 0.7rem; font-weight: bold;">
    <span class="bg-dark rounded-left p-1">Deleted</span>
    <span class="${row.is_deleted ? 'bg-danger' : 'bg-success'} rounded-right p-1">${row.is_deleted}</span>
</div>`;
                                if (row.media_type !== 'link-bio') {
                                    html += `<div class="d-flex text-white" style="font-size: 0.7rem; font-weight: bold;">
    <span class="bg-dark rounded-left p-1">Sorted</span>
    <span class="${!row.is_sorted ? 'bg-danger' : 'bg-success'} rounded-right p-1">${row.is_sorted}</span>
</div>`;
                                    html += `<div class="d-flex text-white" style="font-size: 0.7rem; font-weight: bold;">
    <span class="bg-dark rounded-left p-1">Valid</span>
    <span class="${!row.is_valid ? 'bg-danger' : 'bg-success'} rounded-right p-1">${row.is_valid}</span>
</div>`;
                                }
                                html += '</div>';
                                return html;
                            }
                        },
                        {% if links_delete_permission %}
                        {
                            "title": "Actions",
                            "orderable": false,
                            "render": function (data, type, row) {
                                let buttons = "";
                                {% if links_delete_permission %}
                                if (!row.is_deleted) {
                                    buttons += `<button class="btn btn-outline-light text-black" onclick="deleteLink(${row.id})"
title="Delete Media Link">
    <i class="fas fa-trash"></i>
</button>`;

                                } else {
                                    buttons += `<button class="btn btn-outline-light text-black" onclick="restoreLink(${row.id})"
title="Restore Media Link">
    <i class="fas fa-clock-rotate-left"></i>
</button>`;
                                }
                                {% endif %}
                                {% if videos_edit_permission %}
                                    if (row.media_type === 'video-youtube' && !row.is_deleted) {
                                        buttons += `<button class="btn btn-outline-light text-black" onclick="queueLink(${row.id})"
title="Add to Queue for Transcript">
    <i class="fas fa-upload"></i>
</button>`;
                                    }
                                {% endif %}
                                return `<div class="d-flex flex-row" style="grid-gap: 0.2rem;">${buttons}</div>`;
                            }
                        }
                        {% endif %}
                    ],
                    language: {
                        emptyTable: `{% include ('snippets/datatable_empty.twig') %}`
                    },
                    order: [[0, 'desc']],
                    processing: true,
                    serverSide: true,
                    layout: {
                        bottomStart: [
                            "info",
                            () => `<div class="d-flex flex-row px-4 mx-auto" style="grid-gap: 0.5rem; font-size: 0.8rem;">
<div class="text-muted">Actions:</div>
<div class="text-muted">
    <i class="fas fa-trash"></i> Delete Media
</div>
<div class="text-muted">
    <i class="fas fa-clock-rotate-left"></i> Restore Media
</div>
<div class="text-muted">
    <i class="fas fa-upload"></i> Queue for Transcript
</div>
</div>`
                        ],
                    },
                });
            });

            {% if links_create_permission %}
            function addLink() {
                submitForm('linkDetails', '/api/athlete/{{ player_id }}/links', 'linkMessage', function () {
                    linksGrid.ajax.reload();
                    $('#linkUrl').val('');
                    $('#mediaType').val('video-youtube');
                });
            }
            {% endif %}

            {% if links_delete_permission %}
            function deleteLink(link_id) {
                if (confirm("Delete Link ?")) {
                    const url = `/api/athlete/{{ player_id }}/links/${link_id}?formToken={{ formToken() }}`;

                    deleteUrl(url, null, 'linkMessage', function () {
                        linksGrid.ajax.reload();
                    })
                }
            }

            function restoreLink(link_id) {
                const formToken = "{{ formToken({'url': '/api/athlete/'~player_id~'/links/'~link_id~'/restore?t='~RANDOM()}) }}";
                const formData = new FormData();
                formData.append("formToken", formToken);
                postUrl(`/api/athlete/{{ player_id }}/links/${link_id}/restore`, formData, 'linkMessage', function () {
                    linksGrid.ajax.reload();
                })
            }
            {% endif %}
            {% if videos_edit_permission %}
            function queueLink(link_id) {
                {% set queueToken = formToken({"url":"/api/athlete/"~player_id~"/videos/${link_id}/transcript/queue?t="~RANDOM()}) %}
                const formToken =  "{{ queueToken }}";
                const formData = new FormData();
                formData.append("player_media_id", link_id);
                formData.append("formToken", formToken);
                postUrl(`/api/athlete/{{ player_id }}/videos/${link_id}/transcript/queue`, formData, "linkMessage", function (data) {
                    linksGrid.ajax.reload();
                })
            }
            {% endif %}
            // event listener to update the tooltip based on the selected media type
            $('#mediaType').on('change', function () {
                const selectedType = $(this).val();
                const tooltipText = {
                    'video-youtube': `For YouTube links, use the full URL (https://youtube.com/watch?v=VIDEO_ID).`,
                    'video-youtube-channel': `For YouTube channel links, use the full URL (https://youtube.com/channel/CHANNEL_ID or https://youtube.com/@channel).`,
                    'link-bio': 'For Bio links, use the full URL (e.g., https://bio.link/USERNAME).',
                    'video-generic': 'For generic video links, use the full URL.',
                    'link-generic': 'For generic links, use the full URL.'
                }[selectedType] || 'Enter a valid link URL.';
                $('#link-tooltip').text(tooltipText);
            });
        </script>
    </div>
{% endif %}
