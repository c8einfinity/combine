{% set user = request.session.get("user") %}
{% set user_permissions = request.session.get("user_permissions") %}
{% set athletes_visible_permission = user.user_group_id == "1" or user_permissions.permissions.Athletes.visible == "1" %}
{% set athletes_create_permission = user.user_group_id == "1" or user_permissions.permissions.Athletes.create == "1" %}
{% set athletes_delete_permission = user.user_group_id == "1" or user_permissions.permissions.Athletes.delete == "1" %}
{% set profile_visible_permission = user.user_group_id == "1" or user_permissions.permissions.Profile.visible == "1" %}
{% extends "base.twig" %}

{% block navigation %}
    {%  include "snippets/navigation.twig" %}
{% endblock %}

{% block content_public %}
<div class="container-fluid">
    {% if athletes_visible_permission %}
        {% if athletes_create_permission %}
            <div class="row">
                <div class="col-12 col-md-6 col-lg-8">
                    <div class="card mb-4">
                        <div class="card-body p-4">
                            <h3 class="text-anton pb-2 text-uppercase">Add Athlete</h3>
                            <hr class="hor-line-gradient"/>
                            <form id="athlete" method="post" onsubmit="return false;">
                                <div class="row">
                                    <div class="mb-3 mb-lg-0 col-12 col-md-6 col-lg">
                                        <label for="firstName" class="font-weight-bold">First Name</label>
                                        <input type="text" class="form-control" name="firstName" id="firstName"
                                               placeholder="First Name">
                                    </div>
                                    <div class="mb-3 mb-lg-0 col-12 col-md-6 col-lg">
                                        <label for="lastName" class="font-weight-bold">Last Name</label>
                                        <input type="text" class="form-control" name="lastName" id="lastName"
                                               placeholder="Last Name">
                                    </div>
                                    <div class="mb-3 mb-lg-0 col-12 col-md-6 col-lg">
                                        <label for="sport" class="font-weight-bold">Sport</label>
                                        <select class="form-control" name="sport" id="sport">
                                            <option value="">Select Sport</option>
                                            {% for sport in sports %}
                                                <option value="{{ sport.name }}">{{ sport.name }}</option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                    <div class="mb-3 mb-lg-0 col-12 col-md-6 col-lg">
                                        <label class="d-none d-md-block">&nbsp;</label>
                                        <button type="submit" class="btn btn-soft-green w-100 btn-text-lg"
                                                onclick="addAthlete()">
                                            Add +
                                        </button>
                                    </div>
                                </div>
                                {{ "athleteForm" | formToken }}
                            </form>
                            <div id="formMessage"></div>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-lg-4">
                    <div class="card mb-4">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center justify-content-between">
                                <h3 class="text-uppercase mb-0">Import from CSV</h3>
                                <a href="/athletes/athlete-template.csv" class="btn btn-outline-dark btn-sm"><i
                                            class="fa-solid fa-upload mr-2"></i>Download
                                    Template</a>
                            </div>

                            <hr class="hor-line-gradient mt-4"/>
                            <form id="csvImport" method="post" onsubmit="return false;">
                                <div class="d-flex align-items-center justify-content-between">
                                    <div class="mr-3 w-100">
                                        <label class="font-weight-bold" for="importCsv">Select CSV File</label>
                                        <input type="file" class="custom-file-upload" name="importCsv" id="importCsv"
                                               accept="text/csv">
                                    </div>
                                    <div>
                                        <label class="d-none d-lg-block">&nbsp;</label>
                                        <button type="submit" class="btn btn-soft-green btn-text-lg"
                                                onclick="doImportCsv()">
                                            Upload
                                        </button>
                                    </div>
                                </div>
                                {{ "csvImportForm" | formToken }}
                            </form>
                            <div id="formImportMessage"></div>
                        </div>
                    </div>
                </div>
            </div>
        {% endif %}
        <div class="card">
            <div class="card-body p-4">
                <h3 class="text-anton pb-2 text-uppercase">Athletes</h3>
                <hr class="hor-line-gradient"/>
                <div class="content" style="height: fit-content">
                    <!-- Tabs to filter by transcription statuses: videos verified and speaker verified -->
                    <ul class="nav nav-tabs mb-4">
                        <li class="nav-item">
                            <a class="nav-link font-weight-bold text-dark {% if status == "all" %}active{% endif %}"
                               href="/dashboard/athletes/all">All</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link font-weight-bold text-dark {% if status == "unverified-videos" %}active{% endif %}"
                               href="/dashboard/athletes/unverified-videos">Unverified Videos</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link font-weight-bold text-dark {% if status == "unverified-speakers" %}active{% endif %}"
                               href="/dashboard/athletes/unverified-speakers">Unverified Speaker</a>
                        </li>
                        {% if user.user_group_id == "1" %}
                            <li>
                                <a class="nav-link font-weight-bold text-dark {% if status == "unsent-reports" %}active{% endif %}"
                                   href="/dashboard/athletes/unsent-reports">Unsent Reports</a>
                            </li>
                        {% endif %}
                        <li class="nav-item">
                            <a class="nav-link font-weight-bold text-dark {% if status == "incomplete-bios" %}active{% endif %}"
                               href="/dashboard/athletes/incomplete-bios">Incomplete Bios</a>
                        </li>
                    </ul>
                        <table id="athletes-grid" class="table responsive nowrap"
                               style="border-top: 1px solid #e3e6f0; margin-top: 20px;">
                            <thead>
                            <!-- table details filled in completely by data tables -->
                            </thead>
                        </table>
                    <div id="message"></div>
                </div>
            </div>
        </div>
    {% endif %}
</div>
{% if athletes_visible_permission %}
    <script>
        var athletesGrid = null;

        {% if athletes_create_permission %}
        function addAthlete() {
            if (document.forms[0].firstName.value == '') {
                $('#formMessage').html(`<div class="alert alert-danger">First Name is required</div>`);
                document.forms[0].firstName.focus();
                return;
            }

            if (document.forms[0].lastName.value == '') {
                $('#formMessage').html(`<div class="alert alert-danger">Last Name is required</div>`);
                document.forms[0].lastName.focus();
                return;
            }

            $('#formMessage').html(`<div class="text-center" style="position: absolute; width: 100vw; height: 100vh; z-index: 200;"><h5 class="text-anton text-black pb-2">Adding ...</h5><div style="width: 5rem; height: 5rem;" class="spinner-border" role="status">
                    <span class="sr-only text-black">Adding ...</span>
                </div></div>`)

            submitForm("athlete", "/api/athletes", "", function (data) {
                document.forms[0].firstName.value = '';
                document.forms[0].lastName.value = '';
                athletesGrid.ajax.reload();
                $('#formMessage').html(``);
            });
        }

        function doImportCsv() {
            submitForm("csvImport", "/api/athletes/import-csv", "formImportMessage");
        }
        {% endif %}

        function getStatStatusClass(status) {
            if (status === 100) {
                return 'bg-success';
            }

            if (status === 0) {
                return 'bg-danger';
            }
            if (status > 1 && status < 100) {
                return 'bg-warning';
            }

            return 'bg-secondary';
        }

        function requestResults() {
            window.scrollTo({ top: 0, behavior: 'smooth' });

            document.querySelector(".content").innerHTML = `<div class="text-center" style="width: 100vw; height: 100vh; z-index: 200;">
                    <h5 id="requestLoadText" class="text-anton text-black pb-2">Submitting request ...</h5><div style="width: 5rem; height: 5rem;" class="spinner-border" role="status">
                    <span class="sr-only text-black">Submitting request ...</span>
                </div></div>`;
            try{
                let selectedRows = athletesGrid.rows({selected: true})
                    .data()
                    .toArray()
                    .map(rowData => rowData.id);

                if (selectedRows.length !== 0) {
                    const formData = new FormData();

                    formData.append("playerIds", JSON.stringify(selectedRows));
                    formData.append("formToken", "{{ formToken() }}");
                    postUrl("/api/athletes/request-results", formData, "", function () {
                        window.location.href = "/dashboard/athletes/all";
                    })
                }
            } catch (err) {
                console.log(err);
            }
        }

        $(document).ready(function () {
            athletesGrid = $("#athletes-grid").DataTable({
                select: {
                    style: 'multi',
                },
                dom: '',
                ajax: {
                    url: "/api/athletes/{{ status }}",
                },
                responsive: true,
                pageLength: sessionStorage.getItem('athletesPageLength') || 25,
                columnDefs: [{
                    "defaultContent": "-",
                    "targets": "_all"
                }],
                columns: [
                    {
                        'targets': 0,
                        orderable: false,
                        render: DataTable.render.select()
                    },
                    {
                        title: "Player Id",
                        data: "id",
                        visible: false,
                        searchable: false
                    },
                    {
                        title: "First Name",
                        data: 'first_name',
                        render: function (data, type, row) {
                            if (!row.completed_bio || row.report_sent) {
                                return `
                                        <div class="d-inline-flex" style="grid-gap: 0.3rem;">
                                            ${row.report_sent ? `
                                                <div class="qf-tooltip-wrapper">
                                                    <img src="/images/player/report-sent.svg" alt="Report Sent" />
                                                    <span class="qf-tooltip">Report sent</span>
                                                </div>` : ""}
                                            ${!row.completed_bio ? `
                                                <div class="qf-tooltip-wrapper">
                                                    <img src="/images/warning.svg" alt="Incomplete Biography Warning" />
                                                    <span class="qf-tooltip">Incomplete Biography</span>
                                                </div>` : ""}
                                            ${row.first_name}
                                        </div>
                                    `;
                            }
                            return row.first_name;
                        }
                    },
                    {
                        title: "Last Name",
                        data: 'last_name'
                    },
                    {
                        title: "Date of Birth",
                        data: 'date_of_birth'
                    },
                    {
                        title: "Sport",
                        data: 'sport'
                    },
                    {
                        title: "Home Town",
                        data: 'home_town'
                    },
                    {
                        title: "Major",
                        data: 'major'
                    },
                    {
                        title: "Transcription Status",
                        searchable: false,
                        render: function (data, type, row) {
                            let html = '<div class="d-flex" style="grid-gap: 0.5rem;">';
                            html += `<div class="d-flex text-white" style="font-size: 0.7rem; font-weight: bold;">
    <span class="bg-dark rounded-left p-1">Media</span>
    <span class="${getStatStatusClass(row.transcript_stats.total_media > 0 ? 100 : 0)} rounded-right p-1">${row.transcript_stats.total_media}</span>
</div>`;
                            html += `<div class="d-flex text-white" style="font-size: 0.7rem; font-weight: bold;">
    <span class="bg-dark rounded-left p-1">Videos Verified</span>
    <span class="${getStatStatusClass(Math.round((row.transcript_stats.valid_media / row.transcript_stats.total_media) * 100))} rounded-right p-1">${row.transcript_stats.valid_media}</span>
</div>`;
                            html += `<div class="d-flex text-white" style="font-size: 0.7rem; font-weight: bold;">
    <span class="bg-dark rounded-left p-1">Speaker Verified</span>
    <span class="${getStatStatusClass(Math.round((row.transcript_stats.processed / row.transcript_stats.valid_media) * 100))} rounded-right p-1">${row.transcript_stats.processed}</span>
</div>`;
                            html += "</div>";
                            return html;
                        },
                        orderable: false
                    },
                    {% if profile_visible_permission or athletes_delete_permission %}
                    {
                        "orderable": false,
                        "title": "Actions",
                        "render": function (data, type, row) {
                            let buttons = '';
                            {% if profile_visible_permission %}
                            buttons += `<a class="btn btn-soft-green mr-1" href="/athlete/${row.id}">Profile</a>`;
                            {% endif %}
                            {% if athletes_delete_permission %}
                            buttons += `<a class="btn btn-outline-light text-black" href="#" onclick="deleteAthlete(${row.id})"><i class="fas fa-trash"></i></a>`;
                            {% endif %}
                            return buttons;
                        }
                    }
                    {% endif %}
                ],
                layout: {
                    bottomStart: [
                        {% if athletes_delete_permission %}
                        function () {
                            return `<div class="d-flex justify-content-end">
                            <button class="py-1 px-2 btn mr-2 text-soft-green text-inter download-btn" onclick="requestResults()">Submit Reports</button>
                        </div>`;
                        },
                        {% endif %}
                        "info"
                    ],
                },
                language: {
                    emptyTable: `{% include ('snippets/datatable_empty.twig') %}`
                },
                processing: true,
                serverSide: true,
            });

            athletesGrid.on('length.dt', function (e, settings, len) {
                sessionStorage.setItem('athletesPageLength', len);
            });

            teamQNavSetActive($('#athleteLink')[0]);
        });

        {% if athletes_delete_permission %}
        function deleteAthlete(id) {
            if (confirm("Delete Athlete ?")) {
                deleteUrl(`/api/athlete/${id}`, null, 'message', function () {
                    athletesGrid.ajax.reload();
                })
            }
        }
        {% endif %}
    </script>
{% endif %}
{% endblock %}