{% set user = request.session.get("user") %}
{% set user_permissions = request.session.get("user_permissions") %}
<div class="px-3 py-4">
    <div class="container-fluid">
        {% if user_permissions.permissions.Athletes.visible == "1" or user.user_group_id == "1" %}
            <div class="card">
                <div class="card-body">
                    <h3 class="text-anton text-maastricht-blue py-2">ADD ATHLETE</h3>
                    <hr class="hor-line-gradient"/>
                    {% if user_permissions.permissions.Athletes.create == "1" or user.user_group_id == "1" %}
                        <form id="athlete" method="post" onsubmit="return false;">
                            <div class="row">
                                <div class="col form-group">
                                    <label for="firstName">First Name</label>
                                    <input type="text" class="form-control" name="firstName" id="firstName"
                                           placeholder="First Name">
                                </div>
                                <div class="col form-group">
                                    <label for="lastName">Last Name</label>
                                    <input type="text" class="form-control" name="lastName" id="lastName"
                                           placeholder="Last Name">
                                </div>
                                <div class="col form-group">
                                    <label for="sport">Sport</label>
                                    <select class="form-control" name="sport" id="sport">
                                        <option>Football</option>
                                    </select>
                                </div>
                                <div class="col-12 col-md-2 pt-4">
                                    <button type="submit" class="btn btn-soft-green rounded-0 mt-2 w-100"
                                            onclick="addAthlete()">
                                        Add
                                    </button>
                                </div>
                            </div>
                        </form>
                        <div id="formMessage"></div>
                    {% endif %}
                </div>
            </div>
            <div class="card my-2">
                <div class="card-body">
                    <h3 class="text-anton text-maastricht-blue py-2">ATHLETES</h3>
                    <hr class="hor-line-gradient"/>
                    <div class="content col-12" style="height: fit-content">
                        <!-- Tabs to filter by transcription statuses: videos verified and speaker verified -->
                        <ul class="nav nav-tabs mb-1">
                            <li class="nav-item">
                                <a role="button" class="nav-link {% if status == "all" %}active{% endif %}"
                                   data-toggle="tab" onclick="loadPage('/dashboard/athletes/all', 'content')">All</a>
                            </li>
                            <li class="nav-item">
                                <a role="button" class="nav-link {% if status == "verified-videos" %}active{% endif %}"
                                   data-toggle="tab"
                                   onclick="loadPage('/dashboard/athletes/verified-videos', 'content')">Videos
                                    Verified</a>
                            </li>
                            <li class="nav-item">
                                <a role="button"
                                   class="nav-link {% if status == "verified-speakers" %}active{% endif %}"
                                   data-toggle="tab"
                                   onclick="loadPage('/dashboard/athletes/verified-speakers', 'content')">Speaker
                                    Verified</a>
                            </li>
                            {% if user.user_group_id == "1" %}
                                <li>
                                    <a role="button"
                                       class="nav-link {% if status == "completed-reports" %}active{% endif %}"
                                       data-toggle="tab"
                                       onclick="loadPage('/dashboard/athletes/completed-reports', 'content')">Report
                                        Complete</a>
                                </li>
                            {% endif %}
                        </ul>

                        <table id="athletes-grid" class="table" style="width: 100%">
                            <thead>
                            <tr>
                                <th>Player Id</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Date of Birth</th>
                                <th>Sport</th>
                                <th>Home Town</th>
                                <th>Major</th>
                                <th>Transcription Status</th>
                                <th>Status</th>
                            </tr>
                            </thead>
                        </table>
                        <div id="message"></div>
                    </div>
                </div>
            </div>
        {% endif %}
    </div>
</div>
<script>
    var athletesGrid = null;

    function addAthlete() {
        if (document.forms[0].firstName.value == '') {
            $('#formMessage').html(`<div class="alert alert-danger">First Name is required</div>`);
            document.forms[0].firstName.focus();
            return;
        }
        ;

        if (document.forms[0].lastName.value == '') {
            $('#formMessage').html(`<div class="alert alert-danger">Last Name is required</div>`);
            document.forms[0].lastName.focus();
            return;
        }
        ;

        $('#formMessage').html(`<div class="text-center" style="position: absolute; width: 100vw; height: 100vh; z-index: 200;"><h5 class="text-anton text-maastricht-blue pb-2">Adding ...</h5><div style="width: 5rem; height: 5rem;" class="spinner-border" role="status">
                <span class="sr-only text-maastricht-blue">Adding ...</span>
            </div></div>`)

        submitForm("athlete", "/api/athletes", "", function (data) {
            document.forms[0].firstName.value = '';
            document.forms[0].lastName.value = '';
            athletesGrid.ajax.reload();
            $('#formMessage').html(``);
        });
    }

    function getStatStatusClass(status) {
        if (status === 100) {
            return 'bg-success';
        }

        if (status === 0) {
            return 'bg-danger';
        }
        if (status > 1 && status < 100) {
            return 'bg-warning';
        }

        return 'bg-secondary';
    }

    $(document).ready(function () {
        athletesGrid = $("#athletes-grid").DataTable({
            dom: '',
            ajax: "/api/athletes/{{ status }}",
            columns: [
                {
                    title: "Player Id",
                    data: "id",
                    visible: false,
                    searchable: false
                },
                {
                    title: "First Name",
                    data: 'first_name',
                    render: function (data, type, row) {
                        if (!row.completed_bio || row.report_sent) {
                            return `<div class="d-inline-flex" style="grid-gap: 0.2rem;" data-toggle="tooltip" data-placement="bottom">
                                        ${row.report_sent ? '<img src="/images/player/report-sent.svg" alt="Report Sent" title="Report sent" />' : ""}
                                        ${!row.completed_bio ? '<img src="/images/warning.svg" alt="Incomplete Biography Warning" title="Incomplete Biography" />' : ""}
                                        ${row.first_name}
                                    </div>`;
                        }
                        return row.first_name;
                    }
                },
                {
                    title: "Last Name",
                    data: 'last_name'
                },
                {
                    title: "Date of Birth",
                    data: 'date_of_birth'
                },
                {
                    title: "Sport",
                    data: 'sport'
                },
                {
                    title: "Home Town",
                    data: 'home_town'
                },
                {
                    title: "Major",
                    data: 'major'
                },
                {
                    title: "Transcription Status",
                    searchable: false,
                    render: function (data, type, row) {
                        let html = '<div class="d-flex" style="grid-gap: 0.5rem;">';
                        html += `<div class="d-flex text-white" style="font-size: 0.6rem; font-weight: bold;">
    <span class="bg-dark rounded-left p-1">Media</span>
    <span class="${getStatStatusClass(row.transcript_stats.total_media > 0 ? 100 : 0)} rounded-right p-1">${row.transcript_stats.total_media}</span>
</div>`;
                        html += `<div class="d-flex text-white" style="font-size: 0.6rem; font-weight: bold;">
    <span class="bg-dark rounded-left p-1">Videos Verified</span>
    <span class="${getStatStatusClass(Math.round((row.transcript_stats.valid_media / row.transcript_stats.total_media) * 100))} rounded-right p-1">${row.transcript_stats.valid_media}</span>
</div>`;
                        html += `<div class="d-flex text-white" style="font-size: 0.6rem; font-weight: bold;">
    <span class="bg-dark rounded-left p-1">Speaker Verified</span>
    <span class="${getStatStatusClass(Math.round((row.transcript_stats.processed / row.transcript_stats.valid_media) * 100))} rounded-right p-1">${row.transcript_stats.processed}</span>
</div>`;
                        html += "</div>";
                        return html;
                    },
                    orderable: false
                },
                {% if user_permissions.permissions.Profile.visible == "1" or user.user_group_id == "1" %}
                    {
                        "title": "Status",
                        "render": function (data, type, row) {
                            return `<button class="btn btn-soft-green" onclick="loadPage('/api/athlete/${row.id}', 'content')"> Profile </button>`
                        }
                    },
                {% endif %}
                {% if user_permissions.permissions.Athletes.delete == "1" or user.user_group_id == "1" %}
                    {
                        "orderable": false,
                        "render": function (data, type, row) {
                            return ` <a class="fas fa-trash" href="#" onclick="deleteAthlete(${row.id})"></a>`
                        }
                    }
                {% endif %}
            ],
            language: {
                emptyTable: `{% include ('snippets/datatable_empty.twig') %}`
            },
            processing: true,
            serverSide: true,
        });
    });

    function deleteAthlete(id) {
        if (confirm("Delete Athlete ?")) {
            deleteUrl(`/api/athlete/${id}`, null, 'message', function () {
                athletesGrid.ajax.reload();
            })
        }
    }

</script>
